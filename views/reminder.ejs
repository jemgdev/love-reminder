<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <title>Document</title>
  <style>
    /* Style the Image Used to Trigger the Modal */
    img {
        border-radius: 5px;
        cursor: pointer;
        transition: 0.3s;
    }

    img:hover {opacity: 0.7;}

    /* The Modal (background) */
    #image-viewer {
        display: none;
        position: fixed;
        z-index: 1;
        padding-top: 100px;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.9);
    }
    .modal-content {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
    }
    .modal-content { 
        animation-name: zoom;
        animation-duration: 0.6s;
    }
    @keyframes zoom {
        from {transform:scale(0)} 
        to {transform:scale(1)}
    }
    #image-viewer .close {
        position: absolute;
        top: 15px;
        right: 35px;
        color: #f1f1f1;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
    }
    #image-viewer .close:hover,
    #image-viewer .close:focus {
        color: #bbb;
        text-decoration: none;
        cursor: pointer;
    }

    @media only screen and (max-width: 700px){
        .modal-content {
            width: 100%;
        }
    }
  </style>
</head>
<body>
  <%- include('navbar'); -%>
  <div class="container pt-3">
    <div class="row">
      <div class="col-md-7">
        <div class="images">
          <img src="<%= reminder.image %>" alt="Imagen" class="img-fluid rounded">
          </div>
          <div id="image-viewer">
            <span class="close">&times;</span>
            <img class="modal-content" id="full-image">
          </div>
        <div class="card my-4">
          <div class="card-body">
              <h2 class="card-title"><%= reminder.title %></h2>
            <p class="card-text"><%= reminder.description %></p>
          </div>
          <div class="card-footer">
            <p>Subido por <img src="<%= reminder.user.avatar %>" alt="Avatar" class="rounded-circle me-2" width="32" height="32"><%= reminder.user.username %> <%= reminder.uploadAt %></p>
          </div>
        </div>
      </div>
      <div class="col-md-5">
        <div class="card">
          <div class="card-body">
            <h2 class="card-title">Comentarios:</h2>
            <div class="comment-list" id="comment-section">
              <!-- Aquí se listarían los comentarios -->
              <% comments.forEach(function(comment){ %>
                <div class="comment">
                  <p><strong><%= comment.user.username %>: </strong><%= comment.description %></p>
                </div>
              <% }); %>
              <!-- Fin de la lista de comentarios -->
            </div>
            <hr>
            <form id="comment-form">
              <div class="form-group">
                <textarea class="form-control" name="comment" rows="5"></textarea>
              </div>
              <button type="submit" class="btn btn-primary mt-3">Enviar comentario</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script>
  const commentSection = document.getElementById('comment-section')
  const commentForm = document.getElementById('comment-form')

  commentForm.addEventListener('submit', async event => {
    event.preventDefault()

    const userId = '<%= user.id %>'
    const reminderId = '<%= reminder.id %>'
    const description = commentForm.comment.value
    commentForm.comment.value = ''

    await fetch('/api/comments', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        userId,
        reminderId,
        description
      })
    });

    const response = await fetch(`/api/comments/${reminderId}`);
    const data = await response.json()
    const commentsFound = data.data

    console.log(commentsFound)

    commentSection.innerHTML = ''
    commentsFound.forEach(comment => {
      commentSection.innerHTML += `
        <div class="comment">
          <p><strong>${comment.user.username}: </strong>${comment.description}</p>
        </div>
      `
    })
  })
</script>
<script>
  // Manejar el evento click en las imágenes dentro del contenedor con clase "images"
  document.querySelectorAll('.images img').forEach(function(img) {
    img.addEventListener('click', function() {
      // Obtener la ruta de la imagen clickeada y establecerla como src de la imagen de tamaño completo
      document.getElementById('full-image').src = this.src;
      // Mostrar el visor de imágenes
      document.getElementById('image-viewer').style.display = 'block';
    });
  });

  // Manejar el evento click en el botón de cerrar dentro del contenedor con id "image-viewer"
  document.querySelector('#image-viewer .close').addEventListener('click', function() {
    // Ocultar el visor de imágenes
    document.getElementById('image-viewer').style.display = 'none';
  });
</script>
</html>